#include <iostream>
using namespace std;
class BaseArray {
protected:
	int capacity_;
	int* arr;
public:
	BaseArray(int capacity_) {
		this->capacity_ = capacity_;
		arr = new int[capacity_];
	}
	~BaseArray() { delete arr; }
	int capacity() { return capacity_; }
};
class MyQueue : public BaseArray {
	int* queue;
	int top;
public:
	MyQueue(int capacity_) : BaseArray(capacity_) { top = 0; queue = arr; }
	
	void enqueue(int n) {
		queue[top++] = n;
	}
	int dequeue() {
		int del = queue[0];
		for (int i = 1; i < top; i++) {
			queue[i - 1] = queue[i];
		}
		top--;
		queue[top] = 0;
		return del;
	}
	int length() { return top; }

};


int main(void) {
	MyQueue mQ(100);
	int n;
	cout << "큐에 삽입할 5개의 정수를 입력하라>> ";
	for (int i = 0; i < 5; i++) {
		cin >> n;
		mQ.enqueue(n);
	}
	cout << "큐의 용량: " << mQ.capacity() << ", 큐의 크기: " << mQ.length() << endl;
	cout << "큐의 원소를 순서대로 제거하여 출력한다>> ";
	while (mQ.length() != 0) {
		cout << mQ.dequeue() << ' ';
	}
	cout << endl << "큐의 현재 크기: " << mQ.length() << endl;
}
