#include <iostream>
using namespace std;
class Shape {
protected:
	string name;
	int height;
	int width;
public:
	Shape(string name, int height, int width) :name(name), height(height), width(width) {};
	~Shape() { cout << name << " 먹기" << endl; }
	string getName() { return name; }
	virtual int getArea() { return height * width; };
};
class Oval : public Shape {
public:
	Oval(string name, int height, int width) :Shape(name, height, width){}
	int getArea() override{
		return height * width * 3.14;
	}
};
class Rect : public Shape {
public:
	Rect(string name, int height, int width) :Shape(name, height, width) {}
	int getArea() override {
		return height * width;
	}
};
class Triangular : public Shape {
public:
	Triangular(string name, int height, int width) :Shape(name, height, width) {}
	int getArea() override {
		return height * width / 2;
	}
};
int main(void) {
	Shape* p[3];
	p[0] = new Oval("빈대떡", 10, 20);
	p[1] = new Rect("찰떡", 30, 40);
	p[2] = new Triangular("토스트", 30, 40);
	for (int i = 0; i < 3; ++i)
		cout << p[i]->getName() << " 넓이는 " << p[i]->getArea() << endl;
	for (int i = 0; i < 3; ++i) delete p[i];

	return 0;
}
